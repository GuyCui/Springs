<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--声明 bean-->
    <!--
    DI:给属性赋值
    1.1.set注入:Spring 调用类的 set方法,通过 set 方法完成属性赋值
    简单类型: Java 基本类型加 String
    简单类型 set 注入:
        语法:
            <bean id="xxx" class="yyy">
                <property name="属性名" value="简单类型属性值"/>
                ...
            <bean>
    1.2.set 注入:引用类型 set 注入:
            语法:
            <bean id="xxx" class="yyy">
                <property name="属性名" ref="bean 的 id"/>
                ...
            <bean>

    2.1.set 构造注入:
            语法:
            <bean id="xxx" class="yyy">
                <constructor-arg>:表示一个构造方法的形参
                标签属性:
                    name:构造方法形参名
                    index:构造方法参数位置
                    value:简单类型形参值
                    ref:引用类型的形参值

                </constructor-arg>
                ...
            <bean>
    2.2.引用类型自动注入: Spring 根据 byName,byType规则给引用类型赋值
        1.byName(按名称注入):Java 类中引用类型的属性名称和 Spring 容器中 bean 的 id 名称一样.且数据类型一样的,这样的 bean 能够赋值给引用类型.
        语法:

            <bean id="xxx" class="yyy" autowire="byName">
                简单类型属性赋值
            </bean>
        2.byType(按类型注入):Java 类中引用类型的数据类型和 bean 的 class 是同源的,这些的 bean 能够赋值给引用类型.
            同源关系:
                1.Java 中引用类型的数据类型和 bean 的 class 值是一样的.
                2.Java 中引用类型的数据类型和 bean 的 class 值是父子类关系的.
                3.Java 中引用类型的数据类型和 bean 的 class 值是接口和实现类关系的.

            符合条件的对象,只能有一个.多余一个是报错的.
            <bean id="xxx" class="yyy" autowire="byType">
                简单类型属性赋值
            </bean>
    -->

    <!--声明 Student-->
    <bean id="myStudent" class="top.lovesql.entity.Student">
        <!--简单类型注入-->
        <property name="name" value="GuyCui"/><!--setName("GuyCui")-->
        <property name="age" value="22"/><!--setAge(22)-->
        <!--引用类型注入-->
        <property name="school" ref="mySchool"/><!--setSchool(mySchool)-->

    </bean>

    <!--声明 School-->
    <bean id="mySchool" class="top.lovesql.entity.School">
        <property name="name" value="济南财经大学"/>
        <property name="address" value="山东济南"/>
    </bean>

    <!--声明有参数构造方法-->
    <bean id="myParameter" class="top.lovesql.entity.Student">
        <constructor-arg name="age" value="23"/>
        <constructor-arg name="name" value="法外狂徒-张三"/>
        <constructor-arg name="school" ref="mySchool"/>
    </bean>

    <!--index 构造 index可以省略但是设置顺便要和构造参数一致-->
    <bean id="myIndex" class="top.lovesql.entity.Student">
        <constructor-arg index="1" value="23"/>
        <constructor-arg index="0" value="法外狂徒-张三"/>
        <constructor-arg index="2" ref="mySchool"/>
    </bean>

    <bean id="myType" class="top.lovesql.entity.Student" autowire="byType">
        <property name="name" value="阿瑟"/>
        <property name="age" value="20"/>
    </bean>


</beans>